@model IEnumerable<VehicleRentalSystem.Models.Rental>

<div class="container mt-5">
    <h2 class="text-center mb-4">Manage Rentals</h2>
    <div class="card p-5 rounded" style="background-color: white; border: 2px solid #f9f9f9;">
        <h3 class="text-center text-dark mb-4">Add Rental</h3>
        <form id="addRentalForm" asp-action="Create" method="post" onsubmit="handleAddRentalSubmit(event)">
            <div class="mb-3">
                <label for="CustomerID" class="form-label text-dark">Customer</label>
                <select id="CustomerID" name="CustomerID" class="form-select" required>
                    @foreach (var customer in ViewData["Customers"] as IEnumerable<VehicleRentalSystem.Models.Customer>)
                    {
                        <option value="@customer.CustomerID">@customer.CustomerName</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="VehicleID" class="form-label text-dark">Vehicle</label>
                <select id="VehicleID" name="VehicleID" class="form-select" required>
                    @foreach (var vehicle in ViewData["Vehicles"] as IEnumerable<VehicleRentalSystem.Models.Vehicle>)
                    {
                        <option value="@vehicle.VehicleID">@vehicle.VehicleName</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="RentalDate" class="form-label text-dark">Rental Date</label>
                <input type="date" id="RentalDate" name="RentalDate" class="form-control" required />
            </div>
            <div class="mb-3">
                <label for="ReturnDate" class="form-label text-dark">Return Date</label>
                <input type="date" id="ReturnDate" name="ReturnDate" class="form-control" required />
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary btn-gradient">Add Rental</button>
            </div>
        </form>
    </div>

    <hr />

    <!-- List of Rentals -->
    <h4 class="text-center mt-5">Rental List</h4>
    <table class="table table-bordered table-striped mt-3">
        <thead class="gradient-bg text-white">
            <tr>
                <th>Customer</th>
                <th>Vehicle</th>
                <th>Rental Date</th>
                <th>Return Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rental in Model)
            {
                <tr>
                    <td>@rental.Customer.CustomerName</td>
                    <td>@rental.Vehicle.VehicleName</td>
                    <td>@rental.RentalDate.ToShortDateString()</td>
                    <td>@rental.ReturnDate.ToShortDateString()</td>
                    <td>
                        <!-- Delete Form -->
                        <form id="deleteRentalForm-@rental.RentalID" asp-action="Delete" method="post" style="display:none;">
                            <input type="hidden" name="RentalID" value="@rental.RentalID" />
                        </form>
                        <button type="button" class="btn btn-danger btn-gradient" onclick="confirmDeleteRental(@rental.RentalID)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    // Handle Add Rental with SweetAlert
    function handleAddRentalSubmit(event) {
        event.preventDefault();

        const form = document.getElementById('addRentalForm');
        const formData = new FormData(form);

        fetch(form.action, {
            method: 'POST',
            body: formData,
        })
        .then(response => {
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: 'The rental was successfully added.',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to add the rental. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(() => {
            Swal.fire({
                title: 'Error!',
                text: 'An unexpected error occurred.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    }

    // Confirm Delete with SweetAlert
    function confirmDeleteRental(rentalID) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                const form = document.getElementById(`deleteRentalForm-${rentalID}`);
                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form)
                })
                .then(response => {
                    if (response.ok) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'The rental was successfully deleted.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            form.closest('tr').remove();
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to delete the rental. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(() => {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An unexpected error occurred.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
            }
        });
    }
</script>
